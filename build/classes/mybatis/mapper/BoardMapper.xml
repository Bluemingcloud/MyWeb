<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 
	모든 내용은 mapper 폴더 안으로 들어갑니다.
	namespace 에는 구현인터페이스의 전체 경로가 들어갑니다.
	
	id 속성은 인터페이스의 함수명이 들어갑니다.
	select 의 경우 반환이 존재하므로 resultType 속성을 작성해야 합니다.
	resultType 속성은 반환 받을 타입이 들어갑니다(string, int, double, dto 전체경로)
	태그 안에 SQL문을 작성합니다. 단 ;(세미콜론) 은 작성하지 않습니다.
	
	마이바티스의 매개변수는 일단 꼭 1개여야만 합니다.
	parameterType 에는 매개변수의 타입이 들어갑니다. (string, int, double, dto 전체경로)
	단, parameterType 은 생략가능합니다.
	
	Jdbc 에서 ? 로 사용한 값은
	#{DTO의 getter명} 으로 작성합니다. (dto 의 멤버변수 명과 일치하게 작성)
-->	
<mapper namespace="com.myweb.board.model.BoardMapper">
	
	<select id="now" resultType="string">
		SELECT SYSDATE FROM DUAL
	</select>
	
	<select id="getList" resultType="com.myweb.board.model.BoardDTO">
		SELECT * FROM BOARD ORDER BY BNO DESC
	</select>
	
	<select id="getSearch" resultType="com.myweb.board.model.BoardDTO" parameterType="string">
		SELECT * FROM BOARD WHERE TITLE LIKE #{search} ORDER BY BNO DESC
	</select>
	
	<insert id="regist" parameterType="com.myweb.board.model.BoardDTO">
		INSERT INTO BOARD(BNO, WRITER, TITLE, CONTENT) 
		VALUES(BOARD_SEQ.NEXTVAL, #{writer}, #{title}, #{content})
	</insert>
	
	<select id="getContent" resultType="com.myweb.board.model.BoardDTO" parameterType="int">
		SELECT * FROM BOARD WHERE BNO = #{bno}
	</select>
	
	<update id="update" parameterType="com.myweb.board.model.BoardDTO">
		UPDATE BOARD SET TITLE = #{title}, CONTENT = #{content}, HIT = #{hit} 
		WHERE BNO = #{bno}
	</update>
	
	<delete id="delete" parameterType="int">
		DELETE FROM BOARD WHERE BNO = #{bno}
	</delete>
	
	<update id="increaseHit" parameterType="int">
		UPDATE BOARD SET HIT = HIT + 1 WHERE BNO = #{bno}
	</update>

</mapper>